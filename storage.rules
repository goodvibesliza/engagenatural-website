rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    function isSignedIn() { return request.auth != null; }
    function isOwner(uid) { return request.auth != null && request.auth.uid == uid; }

    // User-owned uploads (avatars, verification photos)
    match /users/{uid}/{allPaths=**} {
      allow read: if isSignedIn(); // app-only; tighten to (isOwner(uid)) if needed
      allow write: if isOwner(uid)
                   && request.resource.size < 10 * 1024 * 1024
                   && request.resource.contentType.matches('image/.*|application/pdf');
    }

    // App-scoped assets (brand images, training thumbnails, community images)
    // NOTE: We can't check roles here. Keep writes "auth-only" and let Firestore control references.
    match /app/{allPaths=**} {
      allow read: if isSignedIn();
      allow write: if isSignedIn()
                   && request.resource.size < 20 * 1024 * 1024
                   && request.resource.contentType.matches('image/.*|video/.*|application/pdf');
    }

    // Default deny anything not matched above
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
